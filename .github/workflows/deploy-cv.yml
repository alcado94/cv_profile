name: Generate and Deploy CV to GitHub Pages

on:
  # Trigger on push to main branch
  push:
    branches: [ main, master ]
  
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-cv:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    # - name: Validate CV schema
    #   run: |
    #     python3 src/builder.py CV/MAC.json --validate
        
    # - name: List available templates
    #   run: |
    #     python3 src/builder.py CV/MAC.json --list-templates
        
    - name: Generate CV (Modern Template)
      run: |
        mkdir -p ./public
        python3 src/builder.py CV/MAC.json -t modern_cv.html -o ./public/modern_cv.html
        
    - name: Generate CV (Classic CV)
      run: |
        mkdir -p ./public
        python3 src/builder.py CV/MAC.json -t classic_cv.html -o ./public/index.html
        
    - name: Generate CV (Text Format)
      run: |
        python3 src/builder.py CV/MAC.json -t simple_text.txt -o ./public/cv.txt
        
    - name: Create index page with multiple formats
      run: |
        cat > ./public/versions.html << 'EOF'
        <!DOCTYPE html>
        <html lang="es">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>CV - Alejandro Campos Dom√≠nguez - Formatos Disponibles</title>
            <style>
                body {
                    font-family: 'Helvetica Neue', Arial, sans-serif;
                    max-width: 600px;
                    margin: 50px auto;
                    padding: 40px;
                    background-color: #f5f5f5;
                    color: #333;
                }
                .container {
                    background: white;
                    padding: 40px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                }
                h1 {
                    color: #2c3e50;
                    text-align: center;
                    margin-bottom: 30px;
                }
                .format-links {
                    display: grid;
                    gap: 20px;
                    margin-top: 30px;
                }
                .format-link {
                    display: block;
                    padding: 20px;
                    background: #4a90e2;
                    color: white;
                    text-decoration: none;
                    border-radius: 8px;
                    text-align: center;
                    transition: background-color 0.3s;
                }
                .format-link:hover {
                    background: #357abd;
                }
                .format-link .title {
                    font-size: 1.2em;
                    font-weight: bold;
                    margin-bottom: 5px;
                }
                .format-link .description {
                    font-size: 0.9em;
                    opacity: 0.9;
                }
                .footer {
                    text-align: center;
                    margin-top: 30px;
                    color: #666;
                    font-size: 0.9em;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>CV - Alejandro Campos Dom√≠nguez</h1>
                <p style="text-align: center; color: #666;">Selecciona el formato que prefieras:</p>
                
                <div class="format-links">
                    <a href="index.html" class="format-link">
                        <div class="title">üé® Formato Moderno</div>
                        <div class="description">Dise√±o profesional y elegante (HTML)</div>
                    </a>
                    
                    <a href="simple.html" class="format-link">
                        <div class="title">üìÑ Formato Simple</div>
                        <div class="description">Dise√±o limpio y minimalista (HTML)</div>
                    </a>
                    
                    <a href="cv.txt" class="format-link">
                        <div class="title">üìù Formato Texto</div>
                        <div class="description">Versi√≥n en texto plano</div>
                    </a>
                </div>
                
                <div class="footer">
                    <p>üîÑ Actualizado autom√°ticamente con GitHub Actions</p>
                    <p>üìÖ Generado el $(date '+%d/%m/%Y a las %H:%M')</p>
                </div>
            </div>
        </body>
        </html>
        EOF
        
    - name: Add favicon and meta tags
      run: |
        # Add favicon to all HTML files
        sed -i 's|<head>|<head>\n    <link rel="icon" type="image/svg+xml" href="data:image/svg+xml,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22%3E%3Ctext y=%22.9em%22 font-size=%2290%22%3Eüë®‚Äçüíª%3C/text%3E%3C/svg%3E">|g' public/*.html
        
        # Add meta description
        sed -i 's|<meta name="viewport"|<meta name="description" content="CV de Alejandro Campos Dom√≠nguez - Data Scientist/ML Engineer con m√°s de 7 a√±os de experiencia en ML, IA Generativa, Big Data y DevOps">\n    <meta name="viewport"|g' public/*.html
        
        # Add Open Graph meta tags
        sed -i 's|<meta name="viewport"|<meta property="og:title" content="CV - Alejandro Campos Dom√≠nguez">\n    <meta property="og:description" content="Data Scientist/ML Engineer con experiencia en ML, IA Generativa, Big Data y DevOps">\n    <meta property="og:type" content="profile">\n    <meta name="viewport"|g' public/*.html
        
    - name: Create README for GitHub Pages
      run: |
        cat > public/README.md << 'EOF'
        # CV - Alejandro Campos Dom√≠nguez
        
        Este sitio contiene mi CV generado autom√°ticamente usando GitHub Actions y templates Jinja2.
        
        ## üìã Formatos Disponibles
        
        - **[Formato Moderno](index.html)** - Dise√±o profesional y elegante
        - **[Formato Simple](simple.html)** - Dise√±o limpio y minimalista  
        - **[Formato Texto](cv.txt)** - Versi√≥n en texto plano
        - **[Selector de Formatos](versions.html)** - P√°gina de selecci√≥n
        
        ## üîÑ Actualizaci√≥n Autom√°tica
        
        Este CV se actualiza autom√°ticamente cada vez que se modifica:
        - Los datos del CV (`cv_profile/CV/MAC.json`)
        - Los templates (`cv_profile/templates/`)
        - El script generador (`cv_profile/src/`)
        
        ## üõ†Ô∏è Tecnolog√≠as Utilizadas
        
        - **Formato de datos**: [MAC (Manfred Awesomic CV)](https://github.com/getmanfred/mac)
        - **Generaci√≥n**: Python + Jinja2
        - **Despliegue**: GitHub Actions + GitHub Pages
        - **Templates**: HTML/CSS responsivo
        
        ---
        
        Generado autom√°ticamente el $(date '+%d/%m/%Y a las %H:%M UTC')
        EOF
        
    - name: Upload artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: './public'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: generate-cv
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  # Optional: Create a release with the generated CV files
  create-release:
    runs-on: ubuntu-latest
    needs: generate-cv
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: ./cv-files
          
      - name: Extract and prepare release files
        run: |
          cd cv-files
          tar -xf artifact.tar
          mkdir -p ../release-files
          cp index.html ../release-files/cv-modern.html
          cp simple.html ../release-files/cv-simple.html
          cp cv.txt ../release-files/cv.txt
          
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: cv-${{ github.sha }}
          release_name: CV Release $(date '+%Y-%m-%d')
          body: |
            üÜï Nueva versi√≥n del CV generada autom√°ticamente
            
            üìÑ Archivos incluidos:
            - `cv-modern.html` - Formato moderno
            - `cv-simple.html` - Formato simple
            - `cv.txt` - Formato texto
            
            üîó Ver online: ${{ steps.deployment.outputs.page_url }}
          draft: false
          prerelease: false 